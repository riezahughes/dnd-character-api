scalar DateTime

type Character{
  id: Int!
  createdAt: DateTime!
  name: String!
  race:  Race!
  class: Class!
  alignment: String
  experience: Int
  background: String
  personality: String
  ideals: String
  bonds: String
  flaw: String
  hp: Int!
  temphp: Int
  maxhp: Int!
  strength: Int!
  dexterity: Int!
  intelligence: Int!
  wisdom: Int!
  charisma: Int!
  age: Int
  size: String
  height: String
  weight: String
  eyes: String
  skin: String
  hair: String
  appearance: String
  allies_org: String
  backstory: String
  treasure: String
  equipment: [CharacterEquipment]!
  feats: [CharacterFeat]
  skills: [CharacterSkill]
  spells: [CharacterSpell]
  diety: Deity
}

type CharacterEquipment{
  id: Int!
  character: Character!
  item: Equipment!
}

type CharacterSpell{
  id: Int!
  character: Character!
  spell: Spell!
}

type CharacterFeat{
  id: Int!
  character: Character
  feats: Feat[]
}

type CharacterSkills{
  id: Int!
  character: Character!
  skill: Skill!
  proficient: Boolean
}

type Equipment{
  id: Int!
  name: String!
  type: String!
  goldworth: String!
  weight: String!
  description: String!
}

type Race{
  id: Int!
  name: String!
  traits: Trait[]
}

type Class{
  id: Int!
  name: String!
  hitdice: String!
  hpfirstlevel: Int!
  hpperlevel: Int!
  hpperlevel_roll: Int!
  proficiencies: [Proficiency]
  classfeatures: [ClassFeature]
  classresources: [ClassResource]
}

type ClassResource{
  id: Int!
  class: Class!
  name: String!
  level: Int!
  value: String!
}

type ClassFeature{
  id: Int!
  class: Class!
  name: String!
  level: Int!
  description: String!
}

type SubClass{
  id: Int!
  name: String!
}

type Skill{
  id: Int!
  name: String!
  statroll: String!
}

type Condition{
  id: Int!
  type: String!
  name: String!
  description: String!
  source: DataResource!
}

type Background{
  id: Int!
  name: String!
  skillproficiencies: String!
  source: DataResource!
}

type Language{
  id: Int!
  name: String!
  type: String!
  script: String!
  source: DataResource!
}

type Feat{
  id: Int!
  name: String!
  ability: String
  prerequitite: String
  description: String!
  source: DataResource!
}

type Spell{
  id: Int!
  name: String!
  level: Int!
  time: String!
  school: SpellSchool!
  concentration: Boolean
  range: String!
  source: DataResource!
}

type SpellSchool{
  id: Int!
  name: String!
  summary: String!
  description: String!
}

type Psyonic{
  id: Int!
  name: String!
  type: String!
  order: String!
  description: String!
  source: DataResource
}


type Deity{
  id: Int!
  name: String!
  alignment: String!
  domains: String!
  pantheon: String!
  province: String!
  symbol: String
  description: String!
}

type SupernaturalPassive{
  id: Int!
  type: String!
  name: String!
  description: String!
  source: DataResource
}

type Proficiency{
  id: Int!
  name: String!
}

type Trait{
  id: Int!
  name: String!
  description: String!
  class: Class!
  level: Int!
}

type DataResource{
  id: Int!
  name: String!
  acronym: String!
}

type Vehicle{
  id: Int!
  name: String!
  type: String!
  size: String!
  sizedimensions: String!
  creaturecapacity: String!
  cargocapacity: String!
  travelpace: String!
  speed: String!
  strength: Int
  strengthmod: Int
  dexterity: Int
  dexteritymod: Int
  constitution: Int
  constitutionmod: Int
  intelligence: Int
  intelligencemod: Int
  wisdom: Int
  widsommod: Int
  charisma: Int
  charismamod: Int
  damageimmunities: String
  conditionimmunities: Condition[]
  vehicleactions: VehicleAction[]
  source: DataResource
}

type VehicleAction{
  id: Int!
  vehicle: Vehicle
  name: String!
  description: String!
}

type DiceModifier{
  id: Int!
  name: String!
  scope: String!
  diceSides: Int!
  rolltype: String!
}

type Query{
    characters: [Character]
    races: [Race]
    classes: [Class]
    dataResources: [DataResource]
    languages: [Language]
    proficiencies: [Proficiency]
}

type Mutation{
    createRace(name: String!): Race
    deleteRace(id: Int!): Race
    createDataResource(name: String!, acronym: String!): DataResource
}
